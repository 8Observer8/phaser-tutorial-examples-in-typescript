{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Boot.ts","src/Game.ts","src/MainMenu.ts","src/PlayGame.ts","src/Preload.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport * as GameModule from \"./Game\";\r\n\r\nexport namespace SpaceHipster\r\n{\r\n    export class Boot extends Phaser.State\r\n    {\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        init()\r\n        {\r\n            if (!GameModule.SpaceHipster.highScore)\r\n            {\r\n                GameModule.SpaceHipster.highScore = 0;\r\n            }\r\n        }\r\n\r\n        preload()\r\n        {\r\n            this.game.load.image('logo', './assets/images/logo.png');\r\n            this.game.load.image('preloadbar', './assets/images/preloader-bar.png');\r\n        }\r\n\r\n        create()\r\n        {\r\n            this.game.stage.backgroundColor = '#fff';\r\n            this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n            this.game.scale.minWidth = 240;\r\n            this.game.scale.minHeight = 170;\r\n            this.game.scale.maxWidth = 2880;\r\n            this.game.scale.maxHeight = 1920;\r\n\r\n            this.game.scale.pageAlignHorizontally = true;\r\n            this.game.scale.pageAlignVertically = true;\r\n\r\n            this.game.scale.refresh();\r\n\r\n            this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n            this.game.state.start('Preload');\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport * as BootModule from \"./Boot\";\r\nimport Boot = BootModule.SpaceHipster.Boot;\r\n\r\nimport * as MainMenuModule from \"./MainMenu\";\r\nimport MainMenu = MainMenuModule.SpaceHipster.MainMenu;\r\n\r\nimport * as PlayGameModule from \"./PlayGame\";\r\nimport PlayGame = PlayGameModule.SpaceHipster.PlayGame;\r\n\r\nimport * as PreloadModule from \"./Preload\";\r\nimport Preload = PreloadModule.SpaceHipster.Preload;\r\n\r\nexport namespace SpaceHipster\r\n{\r\n    export class Game extends Phaser.Game\r\n    {\r\n        public constructor()\r\n        {\r\n            super(window.innerWidth, window.innerHeight, Phaser.AUTO, '');\r\n            this.state.add('Boot', Boot, false);\r\n            this.state.add('MainMenu', MainMenu, false);\r\n            this.state.add('PlayGame', PlayGame, false);\r\n            this.state.add('Preload', Preload, false);\r\n            this.state.start('Boot');\r\n        }\r\n    }\r\n\r\n    export let highScore: number;\r\n}\r\n\r\nwindow.onload = () =>\r\n{\r\n    new SpaceHipster.Game();\r\n};\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport * as GameModule from \"./Game\";\r\n\r\nexport namespace SpaceHipster\r\n{\r\n    export class MainMenu extends Phaser.State\r\n    {\r\n        public constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        background: Phaser.TileSprite;\r\n        beginText: Phaser.Text;\r\n        highScoreText: Phaser.Text;\r\n\r\n        create()\r\n        {\r\n            this.game.input.enabled = true;\r\n            this.background = this.game.add.tileSprite(0, 0, this.game.width, this.game.height, 'space');\r\n            this.background.autoScroll(-20, 0);\r\n\r\n            let text = \"Tap to Begin\";\r\n            let style = {\r\n                font: \"30px Arial\",\r\n                fill: \"#fff\",\r\n                align: \"center\"\r\n            };\r\n\r\n            this.beginText = this.game.add.text(this.game.width / 2, this.game.height / 2, text, style);\r\n            this.beginText.anchor.set(0.5, 0.5);\r\n            console.log(this.beginText);\r\n\r\n            text = \"Highest Score: \" + GameModule.SpaceHipster.highScore;\r\n            this.highScoreText = this.game.add.text(this.game.width / 2, this.game.height / 2 + 50, text, style);\r\n            this.highScoreText.anchor.set(0.5, 0.5);\r\n        }\r\n\r\n        update()\r\n        {\r\n            if (this.game.input.activePointer.justPressed())\r\n            {\r\n                this.game.state.start('PlayGame');\r\n            }\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport * as GameModule from \"./Game\";\r\n\r\nexport namespace SpaceHipster\r\n{\r\n    export class PlayGame extends Phaser.State\r\n    {\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        playerScore: number;\r\n        playerSpeed: number;\r\n\r\n        background: Phaser.TileSprite;\r\n        player: Phaser.Sprite;\r\n\r\n        explosionSound: Phaser.Sound;\r\n        collectSound: Phaser.Sound;\r\n\r\n        asteroids: Phaser.Group;\r\n        collectables: Phaser.Group;\r\n\r\n        scoreLabel: Phaser.Text;\r\n\r\n        init()\r\n        {\r\n            this.playerScore = 0;\r\n            this.playerSpeed = 100;\r\n        }\r\n\r\n        create()\r\n        {\r\n            this.game.world.setBounds(0, 0, 1920, 1920);\r\n            this.background = this.game.add.tileSprite(0, 0, this.game.world.width, this.game.world.height, 'space');\r\n\r\n            this.explosionSound = this.game.add.audio('explosion');\r\n            this.collectSound = this.game.add.audio('collect');\r\n\r\n            this.player = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'playership');\r\n            this.player.anchor.setTo(0.5);\r\n            this.player.scale.setTo(2);\r\n\r\n            this.player.animations.add('fly', [0, 1, 2, 3], 5, true);\r\n            this.player.animations.play('fly');\r\n\r\n            this.game.physics.arcade.enable(this.player);\r\n            this.player.body.collideWorldBounds = true;\r\n\r\n            this.game.camera.follow(this.player);\r\n\r\n            this.generateAsteroids();\r\n            this.generateCollectibles();\r\n            this.showLabels();\r\n        }\r\n\r\n        update()\r\n        {\r\n            if (this.game.input.activePointer.justPressed())\r\n            {\r\n                this.game.physics.arcade.moveToPointer(this.player, this.playerSpeed);\r\n            }\r\n            this.game.physics.arcade.collide(this.player, this.asteroids, this.hitAsteroid, null, this);\r\n            this.game.physics.arcade.overlap(this.player, this.collectables, this.collect, null, this);\r\n        }\r\n\r\n        generateAsteroids()\r\n        {\r\n            this.asteroids = this.game.add.group();\r\n\r\n            this.asteroids.enableBody = true;\r\n            this.asteroids.physicsBodyType = Phaser.Physics.ARCADE;\r\n\r\n            let numAsteroids: number = this.game.rnd.integerInRange(150, 200);\r\n            let asteroid: Phaser.Sprite;\r\n\r\n            for (let i: number = 0; i < numAsteroids; i++)\r\n            {\r\n                asteroid = this.asteroids.create(this.game.world.randomX, this.game.world.randomY, 'rock');\r\n                asteroid.scale.setTo(this.game.rnd.integerInRange(10, 40) / 10);\r\n                asteroid.body.velocity.x = this.game.rnd.integerInRange(-20, 20);\r\n                asteroid.body.velocity.y = this.game.rnd.integerInRange(-20, 20);\r\n                asteroid.body.immovable = true;\r\n                asteroid.body.collideWorldBounds = true;\r\n            }\r\n        }\r\n\r\n        hitAsteroid(player: Phaser.Sprite, asteroid: Phaser.Sprite)\r\n        {\r\n            this.game.input.enabled = false;\r\n            this.explosionSound.play();\r\n\r\n            let emitter: Phaser.Particles.Arcade.Emitter = this.game.add.emitter(this.player.x, this.player.y, 100);\r\n            emitter.makeParticles('playerParticle');\r\n            emitter.minParticleSpeed.setTo(-200, -200);\r\n            emitter.maxParticleSpeed.setTo(200, 200);\r\n            emitter.gravity = new Phaser.Point(0, 0);\r\n            emitter.start(true, 1000, null, 100);\r\n            //player.destroy();\r\n            //asteroid.destroy();\r\n            player.kill();\r\n            asteroid.kill();\r\n\r\n            GameModule.SpaceHipster.highScore = Math.max(this.playerScore, GameModule.SpaceHipster.highScore);\r\n            this.game.time.events.add(1000, this.gameOver, this);\r\n        }\r\n\r\n        generateCollectibles()\r\n        {\r\n            this.collectables = this.game.add.group();\r\n            this.collectables.enableBody = true;\r\n            this.collectables.physicsBodyType = Phaser.Physics.ARCADE;\r\n\r\n            let numCollectibles: number = this.game.rnd.integerInRange(100, 150);\r\n            let collectable: Phaser.Sprite;\r\n\r\n            for (let i: number = 0; i < numCollectibles; i++)\r\n            {\r\n                collectable = this.collectables.create(this.game.world.randomX, this.game.world.randomY, 'power');\r\n                collectable.animations.add('fly', [0, 1, 2, 3], 5, true);\r\n                collectable.animations.play('fly');\r\n            }\r\n        }\r\n\r\n        collect(player: Phaser.Sprite, collectable: Phaser.Sprite)\r\n        {\r\n            this.collectSound.play();\r\n            this.playerScore++;\r\n            this.scoreLabel.text = \"Score: \" + this.playerScore;\r\n\r\n            //collectable.destroy();\r\n            collectable.kill();\r\n        }\r\n\r\n        showLabels()\r\n        {\r\n            let text = \"Score: 0\";\r\n            let style = {\r\n                font: \"20px Impact\",\r\n                fill: \"#fff\",\r\n                align: \"center\"\r\n            };\r\n            this.scoreLabel = this.game.add.text(50, 50, text, style);\r\n            this.scoreLabel.fixedToCamera = true;\r\n        }\r\n\r\n        gameOver()\r\n        {\r\n            this.game.state.start('MainMenu', true, false);\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nexport namespace SpaceHipster\r\n{\r\n    export class Preload extends Phaser.State\r\n    {\r\n        public constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        splash: Phaser.Sprite;\r\n        preloadBar: Phaser.Sprite;\r\n\r\n        preload()\r\n        {\r\n            // Setting up the game loading screen\r\n            this.splash = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'logo');\r\n            this.splash.anchor.setTo(0.5);\r\n\r\n            this.preloadBar = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY + 128, 'preloadbar');\r\n            this.preloadBar.anchor.setTo(0.5);\r\n\r\n            this.game.load.setPreloadSprite(this.preloadBar);\r\n\r\n            // Pre-loading Assets now\r\n            this.game.load.image('space', './assets/images/space.png');\r\n            this.game.load.image('rock', './assets/images/rock.png');\r\n            this.game.load.image('playerParticle', './assets/images/player-particle.png');\r\n\r\n            this.game.load.spritesheet('playership', './assets/images/player.png', 12, 12);\r\n            this.game.load.spritesheet('power', './assets/images/power.png', 12, 12);\r\n\r\n            this.game.load.audio('collect', './assets/audio/collect.ogg');\r\n            this.game.load.audio('explosion', './assets/audio/explosion.ogg');\r\n        }\r\n\r\n        create()\r\n        {\r\n            this.game.state.start('MainMenu');\r\n        }\r\n    }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvQm9vdC50cyIsInNyYy9HYW1lLnRzIiwic3JjL01haW5NZW51LnRzIiwic3JjL1BsYXlHYW1lLnRzIiwic3JjL1ByZWxvYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FDQUEsMkNBQTJDOzs7Ozs7Ozs7Ozs7QUFFM0MsbUNBQXFDO0FBRXJDLElBQWlCLFlBQVksQ0EwQzVCO0FBMUNELFdBQWlCLFlBQVk7SUFFekI7UUFBMEIsd0JBQVk7UUFFbEM7bUJBRUksaUJBQU87UUFDWCxDQUFDO1FBRUQsbUJBQUksR0FBSjtZQUVJLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FDdkMsQ0FBQztnQkFDRyxVQUFVLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7WUFDMUMsQ0FBQztRQUNMLENBQUM7UUFFRCxzQkFBTyxHQUFQO1lBRUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1lBQ3pELElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsbUNBQW1DLENBQUMsQ0FBQztRQUM1RSxDQUFDO1FBRUQscUJBQU0sR0FBTjtZQUVJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUM7WUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQ3pELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUM7WUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztZQUNoQyxJQUFJLENBQUMsSUFB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IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9saWJzL3BoYXNlci5kLnRzXCIgLz5cclxuXHJcbmltcG9ydCAqIGFzIEdhbWVNb2R1bGUgZnJvbSBcIi4vR2FtZVwiO1xyXG5cclxuZXhwb3J0IG5hbWVzcGFjZSBTcGFjZUhpcHN0ZXJcclxue1xyXG4gICAgZXhwb3J0IGNsYXNzIEJvb3QgZXh0ZW5kcyBQaGFzZXIuU3RhdGVcclxuICAgIHtcclxuICAgICAgICBjb25zdHJ1Y3RvcigpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW5pdCgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZiAoIUdhbWVNb2R1bGUuU3BhY2VIaXBzdGVyLmhpZ2hTY29yZSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgR2FtZU1vZHVsZS5TcGFjZUhpcHN0ZXIuaGlnaFNjb3JlID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJlbG9hZCgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmdhbWUubG9hZC5pbWFnZSgnbG9nbycsICcuL2Fzc2V0cy9pbWFnZXMvbG9nby5wbmcnKTtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLmxvYWQuaW1hZ2UoJ3ByZWxvYWRiYXInLCAnLi9hc3NldHMvaW1hZ2VzL3ByZWxvYWRlci1iYXIucG5nJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjcmVhdGUoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnN0YWdlLmJhY2tncm91bmRDb2xvciA9ICcjZmZmJztcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLnNjYWxlTW9kZSA9IFBoYXNlci5TY2FsZU1hbmFnZXIuU0hPV19BTEw7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY2FsZS5taW5XaWR0aCA9IDI0MDtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLm1pbkhlaWdodCA9IDE3MDtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLm1heFdpZHRoID0gMjg4MDtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLm1heEhlaWdodCA9IDE5MjA7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NhbGUucGFnZUFsaWduSG9yaXpvbnRhbGx5ID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLnBhZ2VBbGlnblZlcnRpY2FsbHkgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLnJlZnJlc2goKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5waHlzaWNzLnN0YXJ0U3lzdGVtKFBoYXNlci5QaHlzaWNzLkFSQ0FERSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ1ByZWxvYWQnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vbGlicy9waGFzZXIuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgKiBhcyBCb290TW9kdWxlIGZyb20gXCIuL0Jvb3RcIjtcclxuaW1wb3J0IEJvb3QgPSBCb290TW9kdWxlLlNwYWNlSGlwc3Rlci5Cb290O1xyXG5cclxuaW1wb3J0ICogYXMgTWFpbk1lbnVNb2R1bGUgZnJvbSBcIi4vTWFpbk1lbnVcIjtcclxuaW1wb3J0IE1haW5NZW51ID0gTWFpbk1lbnVNb2R1bGUuU3BhY2VIaXBzdGVyLk1haW5NZW51O1xyXG5cclxuaW1wb3J0ICogYXMgUGxheUdhbWVNb2R1bGUgZnJvbSBcIi4vUGxheUdhbWVcIjtcclxuaW1wb3J0IFBsYXlHYW1lID0gUGxheUdhbWVNb2R1bGUuU3BhY2VIaXBzdGVyLlBsYXlHYW1lO1xyXG5cclxuaW1wb3J0ICogYXMgUHJlbG9hZE1vZHVsZSBmcm9tIFwiLi9QcmVsb2FkXCI7XHJcbmltcG9ydCBQcmVsb2FkID0gUHJlbG9hZE1vZHVsZS5TcGFjZUhpcHN0ZXIuUHJlbG9hZDtcclxuXHJcbmV4cG9ydCBuYW1lc3BhY2UgU3BhY2VIaXBzdGVyXHJcbntcclxuICAgIGV4cG9ydCBjbGFzcyBHYW1lIGV4dGVuZHMgUGhhc2VyLkdhbWVcclxuICAgIHtcclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3VwZXIod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCwgUGhhc2VyLkFVVE8sICcnKTtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5hZGQoJ0Jvb3QnLCBCb290LCBmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWRkKCdNYWluTWVudScsIE1haW5NZW51LCBmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWRkKCdQbGF5R2FtZScsIFBsYXlHYW1lLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWRkKCdQcmVsb2FkJywgUHJlbG9hZCwgZmFsc2UpO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlLnN0YXJ0KCdCb290Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBsZXQgaGlnaFNjb3JlOiBudW1iZXI7XHJcbn1cclxuXHJcbndpbmRvdy5vbmxvYWQgPSAoKSA9PlxyXG57XHJcbiAgICBuZXcgU3BhY2VIaXBzdGVyLkdhbWUoKTtcclxufTtcclxuIiwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vbGlicy9waGFzZXIuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgKiBhcyBHYW1lTW9kdWxlIGZyb20gXCIuL0dhbWVcIjtcclxuXHJcbmV4cG9ydCBuYW1lc3BhY2UgU3BhY2VIaXBzdGVyXHJcbntcclxuICAgIGV4cG9ydCBjbGFzcyBNYWluTWVudSBleHRlbmRzIFBoYXNlci5TdGF0ZVxyXG4gICAge1xyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYmFja2dyb3VuZDogUGhhc2VyLlRpbGVTcHJpdGU7XHJcbiAgICAgICAgYmVnaW5UZXh0OiBQaGFzZXIuVGV4dDtcclxuICAgICAgICBoaWdoU2NvcmVUZXh0OiBQaGFzZXIuVGV4dDtcclxuXHJcbiAgICAgICAgY3JlYXRlKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5pbnB1dC5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gdGhpcy5nYW1lLmFkZC50aWxlU3ByaXRlKDAsIDAsIHRoaXMuZ2FtZS53aWR0aCwgdGhpcy5nYW1lLmhlaWdodCwgJ3NwYWNlJyk7XHJcbiAgICAgICAgICAgIHRoaXMuYmFja2dyb3VuZC5hdXRvU2Nyb2xsKC0yMCwgMCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgdGV4dCA9IFwiVGFwIHRvIEJlZ2luXCI7XHJcbiAgICAgICAgICAgIGxldCBzdHlsZSA9IHtcclxuICAgICAgICAgICAgICAgIGZvbnQ6IFwiMzBweCBBcmlhbFwiLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogXCIjZmZmXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdGhpcy5iZWdpblRleHQgPSB0aGlzLmdhbWUuYWRkLnRleHQodGhpcy5nYW1lLndpZHRoIC8gMiwgdGhpcy5nYW1lLmhlaWdodCAvIDIsIHRleHQsIHN0eWxlKTtcclxuICAgICAgICAgICAgdGhpcy5iZWdpblRleHQuYW5jaG9yLnNldCgwLjUsIDAuNSk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmVnaW5UZXh0KTtcclxuXHJcbiAgICAgICAgICAgIHRleHQgPSBcIkhpZ2hlc3QgU2NvcmU6IFwiICsgR2FtZU1vZHVsZS5TcGFjZUhpcHN0ZXIuaGlnaFNjb3JlO1xyXG4gICAgICAgICAgICB0aGlzLmhpZ2hTY29yZVRleHQgPSB0aGlzLmdhbWUuYWRkLnRleHQodGhpcy5nYW1lLndpZHRoIC8gMiwgdGhpcy5nYW1lLmhlaWdodCAvIDIgKyA1MCwgdGV4dCwgc3R5bGUpO1xyXG4gICAgICAgICAgICB0aGlzLmhpZ2hTY29yZVRleHQuYW5jaG9yLnNldCgwLjUsIDAuNSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB1cGRhdGUoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZS5pbnB1dC5hY3RpdmVQb2ludGVyLmp1c3RQcmVzc2VkKCkpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZS5zdGF0ZS5zdGFydCgnUGxheUdhbWUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9saWJzL3BoYXNlci5kLnRzXCIgLz5cclxuXHJcbmltcG9ydCAqIGFzIEdhbWVNb2R1bGUgZnJvbSBcIi4vR2FtZVwiO1xyXG5cclxuZXhwb3J0IG5hbWVzcGFjZSBTcGFjZUhpcHN0ZXJcclxue1xyXG4gICAgZXhwb3J0IGNsYXNzIFBsYXlHYW1lIGV4dGVuZHMgUGhhc2VyLlN0YXRlXHJcbiAgICB7XHJcbiAgICAgICAgY29uc3RydWN0b3IoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHBsYXllclNjb3JlOiBudW1iZXI7XHJcbiAgICAgICAgcGxheWVyU3BlZWQ6IG51bWJlcjtcclxuXHJcbiAgICAgICAgYmFja2dyb3VuZDogUGhhc2VyLlRpbGVTcHJpdGU7XHJcbiAgICAgICAgcGxheWVyOiBQaGFzZXIuU3ByaXRlO1xyXG5cclxuICAgICAgICBleHBsb3Npb25Tb3VuZDogUGhhc2VyLlNvdW5kO1xyXG4gICAgICAgIGNvbGxlY3RTb3VuZDogUGhhc2VyLlNvdW5kO1xyXG5cclxuICAgICAgICBhc3Rlcm9pZHM6IFBoYXNlci5Hcm91cDtcclxuICAgICAgICBjb2xsZWN0YWJsZXM6IFBoYXNlci5Hcm91cDtcclxuXHJcbiAgICAgICAgc2NvcmVMYWJlbDogUGhhc2VyLlRleHQ7XHJcblxyXG4gICAgICAgIGluaXQoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5wbGF5ZXJTY29yZSA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMucGxheWVyU3BlZWQgPSAxMDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjcmVhdGUoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLndvcmxkLnNldEJvdW5kcygwLCAwLCAxOTIwLCAxOTIwKTtcclxuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gdGhpcy5nYW1lLmFkZC50aWxlU3ByaXRlKDAsIDAsIHRoaXMuZ2FtZS53b3JsZC53aWR0aCwgdGhpcy5nYW1lLndvcmxkLmhlaWdodCwgJ3NwYWNlJyk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmV4cGxvc2lvblNvdW5kID0gdGhpcy5nYW1lLmFkZC5hdWRpbygnZXhwbG9zaW9uJyk7XHJcbiAgICAgICAgICAgIHRoaXMuY29sbGVjdFNvdW5kID0gdGhpcy5nYW1lLmFkZC5hdWRpbygnY29sbGVjdCcpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIgPSB0aGlzLmdhbWUuYWRkLnNwcml0ZSh0aGlzLmdhbWUud29ybGQuY2VudGVyWCwgdGhpcy5nYW1lLndvcmxkLmNlbnRlclksICdwbGF5ZXJzaGlwJyk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheWVyLmFuY2hvci5zZXRUbygwLjUpO1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllci5zY2FsZS5zZXRUbygyKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGxheWVyLmFuaW1hdGlvbnMuYWRkKCdmbHknLCBbMCwgMSwgMiwgM10sIDUsIHRydWUpO1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllci5hbmltYXRpb25zLnBsYXkoJ2ZseScpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5nYW1lLnBoeXNpY3MuYXJjYWRlLmVuYWJsZSh0aGlzLnBsYXllcik7XHJcbiAgICAgICAgICAgIHRoaXMucGxheWVyLmJvZHkuY29sbGlkZVdvcmxkQm91bmRzID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5jYW1lcmEuZm9sbG93KHRoaXMucGxheWVyKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVBc3Rlcm9pZHMoKTtcclxuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUNvbGxlY3RpYmxlcygpO1xyXG4gICAgICAgICAgICB0aGlzLnNob3dMYWJlbHMoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHVwZGF0ZSgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lLmlucHV0LmFjdGl2ZVBvaW50ZXIuanVzdFByZXNzZWQoKSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnBoeXNpY3MuYXJjYWRlLm1vdmVUb1BvaW50ZXIodGhpcy5wbGF5ZXIsIHRoaXMucGxheWVyU3BlZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5waHlzaWNzLmFyY2FkZS5jb2xsaWRlKHRoaXMucGxheWVyLCB0aGlzLmFzdGVyb2lkcywgdGhpcy5oaXRBc3Rlcm9pZCwgbnVsbCwgdGhpcyk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5waHlzaWNzLmFyY2FkZS5vdmVybGFwKHRoaXMucGxheWVyLCB0aGlzLmNvbGxlY3RhYmxlcywgdGhpcy5jb2xsZWN0LCBudWxsLCB0aGlzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGdlbmVyYXRlQXN0ZXJvaWRzKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuYXN0ZXJvaWRzID0gdGhpcy5nYW1lLmFkZC5ncm91cCgpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5hc3Rlcm9pZHMuZW5hYmxlQm9keSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuYXN0ZXJvaWRzLnBoeXNpY3NCb2R5VHlwZSA9IFBoYXNlci5QaHlzaWNzLkFSQ0FERTtcclxuXHJcbiAgICAgICAgICAgIGxldCBudW1Bc3Rlcm9pZHM6IG51bWJlciA9IHRoaXMuZ2FtZS5ybmQuaW50ZWdlckluUmFuZ2UoMTUwLCAyMDApO1xyXG4gICAgICAgICAgICBsZXQgYXN0ZXJvaWQ6IFBoYXNlci5TcHJpdGU7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgbnVtQXN0ZXJvaWRzOyBpKyspXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGFzdGVyb2lkID0gdGhpcy5hc3Rlcm9pZHMuY3JlYXRlKHRoaXMuZ2FtZS53b3JsZC5yYW5kb21YLCB0aGlzLmdhbWUud29ybGQucmFuZG9tWSwgJ3JvY2snKTtcclxuICAgICAgICAgICAgICAgIGFzdGVyb2lkLnNjYWxlLnNldFRvKHRoaXMuZ2FtZS5ybmQuaW50ZWdlckluUmFuZ2UoMTAsIDQwKSAvIDEwKTtcclxuICAgICAgICAgICAgICAgIGFzdGVyb2lkLmJvZHkudmVsb2NpdHkueCA9IHRoaXMuZ2FtZS5ybmQuaW50ZWdlckluUmFuZ2UoLTIwLCAyMCk7XHJcbiAgICAgICAgICAgICAgICBhc3Rlcm9pZC5ib2R5LnZlbG9jaXR5LnkgPSB0aGlzLmdhbWUucm5kLmludGVnZXJJblJhbmdlKC0yMCwgMjApO1xyXG4gICAgICAgICAgICAgICAgYXN0ZXJvaWQuYm9keS5pbW1vdmFibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYXN0ZXJvaWQuYm9keS5jb2xsaWRlV29ybGRCb3VuZHMgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBoaXRBc3Rlcm9pZChwbGF5ZXI6IFBoYXNlci5TcHJpdGUsIGFzdGVyb2lkOiBQaGFzZXIuU3ByaXRlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLmlucHV0LmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5leHBsb3Npb25Tb3VuZC5wbGF5KCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZW1pdHRlcjogUGhhc2VyLlBhcnRpY2xlcy5BcmNhZGUuRW1pdHRlciA9IHRoaXMuZ2FtZS5hZGQuZW1pdHRlcih0aGlzLnBsYXllci54LCB0aGlzLnBsYXllci55LCAxMDApO1xyXG4gICAgICAgICAgICBlbWl0dGVyLm1ha2VQYXJ0aWNsZXMoJ3BsYXllclBhcnRpY2xlJyk7XHJcbiAgICAgICAgICAgIGVtaXR0ZXIubWluUGFydGljbGVTcGVlZC5zZXRUbygtMjAwLCAtMjAwKTtcclxuICAgICAgICAgICAgZW1pdHRlci5tYXhQYXJ0aWNsZVNwZWVkLnNldFRvKDIwMCwgMjAwKTtcclxuICAgICAgICAgICAgZW1pdHRlci5ncmF2aXR5ID0gbmV3IFBoYXNlci5Qb2ludCgwLCAwKTtcclxuICAgICAgICAgICAgZW1pdHRlci5zdGFydCh0cnVlLCAxMDAwLCBudWxsLCAxMDApO1xyXG4gICAgICAgICAgICAvL3BsYXllci5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIC8vYXN0ZXJvaWQuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICBwbGF5ZXIua2lsbCgpO1xyXG4gICAgICAgICAgICBhc3Rlcm9pZC5raWxsKCk7XHJcblxyXG4gICAgICAgICAgICBHYW1lTW9kdWxlLlNwYWNlSGlwc3Rlci5oaWdoU2NvcmUgPSBNYXRoLm1heCh0aGlzLnBsYXllclNjb3JlLCBHYW1lTW9kdWxlLlNwYWNlSGlwc3Rlci5oaWdoU2NvcmUpO1xyXG4gICAgICAgICAgICB0aGlzLmdhbWUudGltZS5ldmVudHMuYWRkKDEwMDAsIHRoaXMuZ2FtZU92ZXIsIHRoaXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZ2VuZXJhdGVDb2xsZWN0aWJsZXMoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5jb2xsZWN0YWJsZXMgPSB0aGlzLmdhbWUuYWRkLmdyb3VwKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29sbGVjdGFibGVzLmVuYWJsZUJvZHkgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmNvbGxlY3RhYmxlcy5waHlzaWNzQm9keVR5cGUgPSBQaGFzZXIuUGh5c2ljcy5BUkNBREU7XHJcblxyXG4gICAgICAgICAgICBsZXQgbnVtQ29sbGVjdGlibGVzOiBudW1iZXIgPSB0aGlzLmdhbWUucm5kLmludGVnZXJJblJhbmdlKDEwMCwgMTUwKTtcclxuICAgICAgICAgICAgbGV0IGNvbGxlY3RhYmxlOiBQaGFzZXIuU3ByaXRlO1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IG51bUNvbGxlY3RpYmxlczsgaSsrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0YWJsZSA9IHRoaXMuY29sbGVjdGFibGVzLmNyZWF0ZSh0aGlzLmdhbWUud29ybGQucmFuZG9tWCwgdGhpcy5nYW1lLndvcmxkLnJhbmRvbVksICdwb3dlcicpO1xyXG4gICAgICAgICAgICAgICAgY29sbGVjdGFibGUuYW5pbWF0aW9ucy5hZGQoJ2ZseScsIFswLCAxLCAyLCAzXSwgNSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0YWJsZS5hbmltYXRpb25zLnBsYXkoJ2ZseScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb2xsZWN0KHBsYXllcjogUGhhc2VyLlNwcml0ZSwgY29sbGVjdGFibGU6IFBoYXNlci5TcHJpdGUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmNvbGxlY3RTb3VuZC5wbGF5KCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheWVyU2NvcmUrKztcclxuICAgICAgICAgICAgdGhpcy5zY29yZUxhYmVsLnRleHQgPSBcIlNjb3JlOiBcIiArIHRoaXMucGxheWVyU2NvcmU7XHJcblxyXG4gICAgICAgICAgICAvL2NvbGxlY3RhYmxlLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgY29sbGVjdGFibGUua2lsbCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2hvd0xhYmVscygpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgdGV4dCA9IFwiU2NvcmU6IDBcIjtcclxuICAgICAgICAgICAgbGV0IHN0eWxlID0ge1xyXG4gICAgICAgICAgICAgICAgZm9udDogXCIyMHB4IEltcGFjdFwiLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogXCIjZmZmXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0aGlzLnNjb3JlTGFiZWwgPSB0aGlzLmdhbWUuYWRkLnRleHQoNTAsIDUwLCB0ZXh0LCBzdHlsZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc2NvcmVMYWJlbC5maXhlZFRvQ2FtZXJhID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGdhbWVPdmVyKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zdGF0ZS5zdGFydCgnTWFpbk1lbnUnLCB0cnVlLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL2xpYnMvcGhhc2VyLmQudHNcIiAvPlxyXG5cclxuZXhwb3J0IG5hbWVzcGFjZSBTcGFjZUhpcHN0ZXJcclxue1xyXG4gICAgZXhwb3J0IGNsYXNzIFByZWxvYWQgZXh0ZW5kcyBQaGFzZXIuU3RhdGVcclxuICAgIHtcclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNwbGFzaDogUGhhc2VyLlNwcml0ZTtcclxuICAgICAgICBwcmVsb2FkQmFyOiBQaGFzZXIuU3ByaXRlO1xyXG5cclxuICAgICAgICBwcmVsb2FkKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vIFNldHRpbmcgdXAgdGhlIGdhbWUgbG9hZGluZyBzY3JlZW5cclxuICAgICAgICAgICAgdGhpcy5zcGxhc2ggPSB0aGlzLmdhbWUuYWRkLnNwcml0ZSh0aGlzLmdhbWUud29ybGQuY2VudGVyWCwgdGhpcy5nYW1lLndvcmxkLmNlbnRlclksICdsb2dvJyk7XHJcbiAgICAgICAgICAgIHRoaXMuc3BsYXNoLmFuY2hvci5zZXRUbygwLjUpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5wcmVsb2FkQmFyID0gdGhpcy5nYW1lLmFkZC5zcHJpdGUodGhpcy5nYW1lLndvcmxkLmNlbnRlclgsIHRoaXMuZ2FtZS53b3JsZC5jZW50ZXJZICsgMTI4LCAncHJlbG9hZGJhcicpO1xyXG4gICAgICAgICAgICB0aGlzLnByZWxvYWRCYXIuYW5jaG9yLnNldFRvKDAuNSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmdhbWUubG9hZC5zZXRQcmVsb2FkU3ByaXRlKHRoaXMucHJlbG9hZEJhcik7XHJcblxyXG4gICAgICAgICAgICAvLyBQcmUtbG9hZGluZyBBc3NldHMgbm93XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5sb2FkLmltYWdlKCdzcGFjZScsICcuL2Fzc2V0cy9pbWFnZXMvc3BhY2UucG5nJyk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5sb2FkLmltYWdlKCdyb2NrJywgJy4vYXNzZXRzL2ltYWdlcy9yb2NrLnBuZycpO1xyXG4gICAgICAgICAgICB0aGlzLmdhbWUubG9hZC5pbWFnZSgncGxheWVyUGFydGljbGUnLCAnLi9hc3NldHMvaW1hZ2VzL3BsYXllci1wYXJ0aWNsZS5wbmcnKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5sb2FkLnNwcml0ZXNoZWV0KCdwbGF5ZXJzaGlwJywgJy4vYXNzZXRzL2ltYWdlcy9wbGF5ZXIucG5nJywgMTIsIDEyKTtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLmxvYWQuc3ByaXRlc2hlZXQoJ3Bvd2VyJywgJy4vYXNzZXRzL2ltYWdlcy9wb3dlci5wbmcnLCAxMiwgMTIpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5nYW1lLmxvYWQuYXVkaW8oJ2NvbGxlY3QnLCAnLi9hc3NldHMvYXVkaW8vY29sbGVjdC5vZ2cnKTtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLmxvYWQuYXVkaW8oJ2V4cGxvc2lvbicsICcuL2Fzc2V0cy9hdWRpby9leHBsb3Npb24ub2dnJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjcmVhdGUoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KCdNYWluTWVudScpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0="}